{"ast":null,"code":"var _jsxFileName = \"/Users/quangnguyen/Desktop/Projects/Chazzy/client/src/components/Dashboard.js\";\nimport React, { useState, useEffect, useContext, useRef } from 'react';\nimport { navigate } from '@reach/router';\nimport axios from 'axios';\nimport Context from '../Context';\nimport io from 'socket.io-client'; // Bootstrap & Images\n\nimport { Navbar, Nav, Row, Col } from 'react-bootstrap';\nimport styles from './Dashboard.module.css';\nimport '../App.css';\nimport Grey from '../grey.jpg';\n\nconst UserProfilePreview = ({\n  user,\n  onClick\n}) => {\n  return React.createElement(\"button\", {\n    style: {\n      background: 'none',\n      border: '0px solid white',\n      outlineStyle: 'none'\n    },\n    onClick: onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    width: \"90\",\n    height: \"90\",\n    className: \"rounded-circle\",\n    src: Grey,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"mt-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"@\", user ? user.username : 'username'));\n};\n\nconst ChatArea = ({\n  userWhomAmChattingWith,\n  passedInMessages\n}) => {\n  const {\n    loggedInUser\n  } = useContext(Context);\n  const [messageText, setMessageText] = useState('');\n  const messageInputRef = useRef();\n  const [socket] = useState(io(':8000'));\n\n  const formOnSubmit = event => {\n    event.preventDefault();\n    const newMessage = {\n      message: messageText,\n      senderID: loggedInUser._id,\n      receiverID: userWhomAmChattingWith._id\n    };\n    axios.post('http://localhost:8000/api/messages/send', newMessage, {\n      withCredentials: true\n    }).then(res => {\n      messageInputRef.current.value = '';\n      socket.emit('new-message', res.data);\n    }).catch(err => console.log(err));\n  };\n\n  const isMyMessage = message => message.senderID === loggedInUser._id;\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, userWhomAmChattingWith ? React.createElement(React.Fragment, null, React.createElement(\"ul\", {\n    className: \"list-inline text-center mx-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(UserProfilePreview, {\n    user: userWhomAmChattingWith,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  })), passedInMessages ? passedInMessages.map(message => React.createElement(\"li\", {\n    key: message._id,\n    className: isMyMessage(message) ? 'text-right' : 'text-left',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"mx-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, isMyMessage(message) ? message.message : React.createElement(React.Fragment, null), React.createElement(\"span\", {\n    className: `p-2 rounded ${isMyMessage(message) ? 'ml-2 bg-secondary text-light' : 'mr-2 bg-light'}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"@\", isMyMessage(message) ? 'me' : userWhomAmChattingWith.username), isMyMessage(message) ? React.createElement(React.Fragment, null) : message.message))) : React.createElement(React.Fragment, null)), React.createElement(\"footer\", {\n    style: {\n      position: 'absolute',\n      bottom: '24px',\n      left: '24px',\n      right: '0'\n    },\n    className: \"text-center p-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: formOnSubmit,\n    className: \"form-row w-100 text-center m-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    ref: messageInputRef,\n    onChange: event => setMessageText(event.target.value),\n    type: \"text\",\n    className: \"form-control bg-light col-6 p-4 mx-1 border-0\",\n    placeholder: \"Type in your message here\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), messageText.length > 0 ? React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-secondary col-2 mr-1\",\n    value: \"=> Send\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }) : React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-secondary col-2 mr-1\",\n    value: \"=> Send\",\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), messageText.length > 0 ? React.createElement(\"button\", {\n    className: \"btn btn-success col-2 mr-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Now\") : React.createElement(\"button\", {\n    className: \"btn btn-success col-2 mr-1\",\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Now\")))) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"text-secondary m-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"- Chazzier!. :) -\")));\n};\n\nconst Dashboard = () => {\n  const [loggedInUser, setLoggedInUser] = useState(null);\n  const [userChatWith, setUserChatWith] = useState(null);\n  const [otherUsers, setOtherUsers] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [groupedMessages, setGroupedMessages] = useState({});\n  const [socket] = useState(io(':8000'));\n  useEffect(() => {\n    axios.get('http://localhost:8000/api/users', {\n      withCredentials: true\n    }).then(res => {\n      setLoggedInUser(res.data.loggedInUser);\n      setOtherUsers(res.data.otherUsers);\n    }).catch(err => navigate('/welcome'));\n    socket.on('received-newMessage', data => {\n      if (messages) {\n        setMessages(messages.concat([data.message]));\n      }\n    });\n  }, []);\n  useEffect(() => {\n    if (loggedInUser) {\n      axios.get(`http://localhost:8000/api/messages/${loggedInUser._id}`, {\n        withCredentials: true\n      }).then(res => setMessages(res.data)).catch(err => console.log(err));\n    }\n  }, [loggedInUser]);\n  useEffect(() => {\n    let grouped = {};\n\n    for (const key in Object.keys(groupedMessages)) {\n      grouped[key] = [];\n    }\n\n    if (messages) {\n      messages.forEach(message => {\n        const user = getRepresentationalUser(message);\n        grouped.hasOwnProperty(user._id) ? grouped[user._id] = grouped[user._id].concat([message]) : grouped[user._id] = [message];\n      });\n    }\n\n    console.log(Object.keys(grouped)); // for (let index = 0; index < messages.length; index++) {\n    //     const message = messages[index];\n    //     const user = getRepresentationalUser(message);\n    //     const userID = user._id;\n    //     (grouped.hasOwnProperty(userID)) ? grouped[userID] = grouped[userID].concat([message]) : grouped[userID] = [message];\n    // }\n    // console.log(groupedMessages);\n\n    setGroupedMessages(grouped);\n  }, [messages]);\n\n  const logOut = () => {\n    axios.get('http://localhost:8000/api/users/logout', {\n      withCredentials: true\n    }).then(res => navigate('/')).catch(err => console.log(err));\n  };\n\n  const getRepresentationalUser = message => getUserById(message.receiverID === loggedInUser._id ? message.senderID : message.receiverID);\n\n  const displayTimeAgo = timestamp => {\n    const date = new Date(timestamp);\n\n    const moment = require('moment')(date);\n\n    return moment.fromNow();\n  };\n\n  const getUserById = userID => {\n    return otherUsers.filter(user => user._id === userID)[0];\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    style: {\n      backgroundColor: 'white'\n    },\n    className: \"py-3 px-4\",\n    expand: \"lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"p-0 m-0\",\n    href: \"#\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, \"Chazzy.\"), React.createElement(Navbar.Toggle, {\n    \"aria-controls\": \"nav-collapse\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }), React.createElement(Navbar.Collapse, {\n    id: \"nav-collapse\",\n    className: \"ml-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(Nav, {\n    className: \"mr-auto align-middle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(Nav.Link, {\n    className: \"align-middle mx-1\",\n    href: \"#\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, loggedInUser ? loggedInUser.username : ''), React.createElement(Nav.Link, {\n    className: \"align-middle mx-1\",\n    href: \"#\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, \"Recents\")), React.createElement(Nav, {\n    className: \"ml-auto m-0 p-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(Nav.Link, {\n    onClick: logOut,\n    className: \"align-middle mx-1\",\n    href: \"#\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, \"Log Out.\")))), React.createElement(\"div\", {\n    className: `${styles.rowHeight} container-fluid m-0 p-0 w-100`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(Row, {\n    className: \"h-100 w-100 p-0 m-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, React.createElement(Col, {\n    style: {\n      backgroundImage: 'linear-gradient(white, rgb(245, 245, 245))'\n    },\n    className: \"h-100\",\n    md: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(Row, {\n    className: \"m-0 p-0 py-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"list-inline p-0 m-0\",\n    style: {\n      overflowX: 'scroll'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, otherUsers.map(otherUser => React.createElement(\"li\", {\n    key: otherUser._id,\n    className: \"list-inline-item mx-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(UserProfilePreview, {\n    onClick: () => setUserChatWith(otherUser),\n    user: otherUser,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }))))), React.createElement(Row, {\n    className: \"p-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"list-inline w-100\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    className: \"mx-auto mb-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, \"Hi \", loggedInUser ? loggedInUser.firstName : '', \"! You have (\", messages.length, \") messages.\")), React.createElement(\"li\", {\n    className: \"w-100 text-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"list-inline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, Object.entries(groupedMessages).map(([userID, messages]) => React.createElement(\"ul\", {\n    key: userID,\n    className: \"list-inline m-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"list-inline-item align-middle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    width: \"70\",\n    height: \"70\",\n    className: \"rounded-circle\",\n    src: Grey,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  })), React.createElement(\"li\", {\n    className: \"list-inline-item align-middle text-left mx-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, React.createElement(\"h6\", {\n    className: \"m-0 font-weight-bold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, \"@\", getUserById(userID).username), React.createElement(\"p\", {\n    className: \"m-0 text-secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, messages[messages.length - 1].message))), React.createElement(\"li\", {\n    className: \"list-inline-item float-right text-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, React.createElement(\"h6\", {\n    className: \"m-0 py-4 font-weight-bold text-secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, displayTimeAgo(messages[messages.length - 1].createdAt))))))))))), React.createElement(Col, {\n    className: \"p-3 h-100\",\n    md: 7,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, React.createElement(Context.Provider, {\n    value: {\n      loggedInUser\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, userChatWith ? React.createElement(ChatArea, {\n    userWhomAmChattingWith: userChatWith,\n    passedInMessages: groupedMessages[userChatWith._id],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }) : React.createElement(React.Fragment, null))))));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/quangnguyen/Desktop/Projects/Chazzy/client/src/components/Dashboard.js"],"names":["React","useState","useEffect","useContext","useRef","navigate","axios","Context","io","Navbar","Nav","Row","Col","styles","Grey","UserProfilePreview","user","onClick","background","border","outlineStyle","username","ChatArea","userWhomAmChattingWith","passedInMessages","loggedInUser","messageText","setMessageText","messageInputRef","socket","formOnSubmit","event","preventDefault","newMessage","message","senderID","_id","receiverID","post","withCredentials","then","res","current","value","emit","data","catch","err","console","log","isMyMessage","map","position","bottom","left","right","target","length","Dashboard","setLoggedInUser","userChatWith","setUserChatWith","otherUsers","setOtherUsers","messages","setMessages","groupedMessages","setGroupedMessages","get","on","concat","grouped","key","Object","keys","forEach","getRepresentationalUser","hasOwnProperty","logOut","getUserById","displayTimeAgo","timestamp","date","Date","moment","require","fromNow","userID","filter","backgroundColor","rowHeight","backgroundImage","overflowX","otherUser","firstName","entries","createdAt"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext, useRef } from 'react';\nimport { navigate } from '@reach/router';\nimport axios from 'axios';\nimport Context from '../Context';\nimport io from 'socket.io-client';\n\n// Bootstrap & Images\nimport { Navbar, Nav, Row, Col } from 'react-bootstrap';\nimport styles from './Dashboard.module.css';\nimport '../App.css';\nimport Grey from '../grey.jpg';\n\nconst UserProfilePreview = ({ user, onClick }) => {\n    return (\n        <button style={{ background: 'none', border: '0px solid white', outlineStyle: 'none' }} onClick={onClick}>\n            <img width=\"90\" height=\"90\" className=\"rounded-circle\" src={Grey} alt=\"\" /><br />\n            <p className=\"mt-2\">@{user ? user.username : 'username'}</p>\n        </button>\n    );\n}\n\nconst ChatArea = ({ userWhomAmChattingWith, passedInMessages }) => {\n    const { loggedInUser } = useContext(Context);\n    const [messageText, setMessageText] = useState('');\n    const messageInputRef = useRef();\n    const [socket] = useState(io(':8000'));\n\n    const formOnSubmit = event => {\n        event.preventDefault();\n        const newMessage = { message: messageText, senderID: loggedInUser._id, receiverID: userWhomAmChattingWith._id };\n        axios.post('http://localhost:8000/api/messages/send', newMessage, { withCredentials: true })\n            .then(res => {\n                messageInputRef.current.value = '';\n                socket.emit('new-message', res.data);\n            })\n            .catch(err => console.log(err));\n    }\n\n    const isMyMessage = message => message.senderID === loggedInUser._id;\n\n    return (\n        <div>\n            {userWhomAmChattingWith ? <>\n                <ul className=\"list-inline text-center mx-1\">\n                    <li><UserProfilePreview user={userWhomAmChattingWith} /></li>\n                    {passedInMessages ? passedInMessages.map(message => (\n                        <li key={message._id} className={isMyMessage(message) ? 'text-right' : 'text-left'}>\n                            <p className=\"mx-2\">\n                                {isMyMessage(message) ? message.message : <></>}\n                                <span className={`p-2 rounded ${isMyMessage(message) ? 'ml-2 bg-secondary text-light' : 'mr-2 bg-light'}`}>@{isMyMessage(message) ? 'me' : userWhomAmChattingWith.username}</span>\n                                {isMyMessage(message) ? <></> : message.message}\n                            </p>\n                        </li>\n                    )) : <></>}\n                </ul>\n                <footer style={{ position: 'absolute', bottom: '24px', left: '24px', right: '0' }} className=\"text-center p-0\">\n                    <form onSubmit={formOnSubmit} className=\"form-row w-100 text-center m-0\">\n                        <input ref={messageInputRef} onChange={event => setMessageText(event.target.value)} type=\"text\" className=\"form-control bg-light col-6 p-4 mx-1 border-0\" placeholder=\"Type in your message here\" />\n                        {messageText.length > 0 ? <input type=\"submit\" className=\"btn btn-secondary col-2 mr-1\" value=\"=> Send\" /> : <input type=\"submit\" className=\"btn btn-secondary col-2 mr-1\" value=\"=> Send\" disabled />}\n                        {messageText.length > 0 ? <button className=\"btn btn-success col-2 mr-1\">Now</button> : <button className=\"btn btn-success col-2 mr-1\" disabled>Now</button>}\n                    </form>\n                </footer>\n            </> : <div><p className=\"text-secondary m-5\">- Chazzier!. :) -</p></div>}\n        </div>\n    );\n}\n\nconst Dashboard = () => {\n    const [loggedInUser, setLoggedInUser] = useState(null);\n    const [userChatWith, setUserChatWith] = useState(null);\n    const [otherUsers, setOtherUsers] = useState([]);\n    const [messages, setMessages] = useState([]);\n    const [groupedMessages, setGroupedMessages] = useState({});\n    const [socket] = useState(io(':8000'));\n\n    useEffect(() => {\n        axios.get('http://localhost:8000/api/users', { withCredentials: true })\n            .then(res => {\n                setLoggedInUser(res.data.loggedInUser);\n                setOtherUsers(res.data.otherUsers);\n            })\n            .catch(err => navigate('/welcome'));\n\n        socket.on('received-newMessage', data => {\n            if (messages) {\n                setMessages(messages.concat([data.message]));\n            }\n        });\n    }, []);\n\n    useEffect(() => {\n        if (loggedInUser) {\n            axios.get(`http://localhost:8000/api/messages/${loggedInUser._id}`, { withCredentials: true })\n                .then(res => setMessages(res.data))\n                .catch(err => console.log(err));\n        }\n    }, [loggedInUser]);\n\n    useEffect(() => {\n        let grouped = {};\n        for (const key in Object.keys(groupedMessages)) {\n            grouped[key] = [];\n        }\n\n        if (messages) {\n            messages.forEach(message => {\n                const user = getRepresentationalUser(message);\n                (grouped.hasOwnProperty(user._id)) ? grouped[user._id] = grouped[user._id].concat([message]) : grouped[user._id] = [message];\n            });\n        }\n\n        console.log(Object.keys(grouped));\n\n        // for (let index = 0; index < messages.length; index++) {\n        //     const message = messages[index];\n        //     const user = getRepresentationalUser(message);\n        //     const userID = user._id;\n\n        //     (grouped.hasOwnProperty(userID)) ? grouped[userID] = grouped[userID].concat([message]) : grouped[userID] = [message];\n        // }\n\n        // console.log(groupedMessages);\n\n        setGroupedMessages(grouped);\n    }, [messages]);\n\n    const logOut = () => {\n        axios.get('http://localhost:8000/api/users/logout', { withCredentials: true })\n            .then(res => navigate('/'))\n            .catch(err => console.log(err));\n    }\n\n    const getRepresentationalUser = message => getUserById((message.receiverID === loggedInUser._id) ? message.senderID : message.receiverID);\n\n    const displayTimeAgo = timestamp => {\n        const date = new Date(timestamp);\n        const moment = require('moment')(date);\n        return moment.fromNow();\n    }\n\n    const getUserById = userID => {\n        return otherUsers.filter(user => user._id === userID)[0];\n    }\n\n    return (\n        <div>\n            <Navbar style={{ backgroundColor: 'white' }} className=\"py-3 px-4\" expand=\"lg\">\n                <h3 className=\"p-0 m-0\" href=\"#\">Chazzy.</h3>\n                <Navbar.Toggle aria-controls=\"nav-collapse\" />\n                <Navbar.Collapse id=\"nav-collapse\" className=\"ml-4\">\n                    <Nav className=\"mr-auto align-middle\">\n                        <Nav.Link className=\"align-middle mx-1\" href=\"#\">{loggedInUser ? loggedInUser.username : ''}</Nav.Link>\n                        <Nav.Link className=\"align-middle mx-1\" href=\"#\">Recents</Nav.Link>\n                    </Nav>\n                    <Nav className=\"ml-auto m-0 p-0\">\n                        <Nav.Link onClick={logOut} className=\"align-middle mx-1\" href=\"#\">Log Out.</Nav.Link>\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n            <div className={`${styles.rowHeight} container-fluid m-0 p-0 w-100`}>\n                <Row className=\"h-100 w-100 p-0 m-0\">\n                    <Col style={{ backgroundImage: 'linear-gradient(white, rgb(245, 245, 245))' }} className=\"h-100\" md={5}>\n                        <Row className=\"m-0 p-0 py-3\">\n                            <ul className=\"list-inline p-0 m-0\" style={{ overflowX: 'scroll' }}>\n                                {otherUsers.map(otherUser => (\n                                    <li key={otherUser._id} className=\"list-inline-item mx-2\">\n                                        <UserProfilePreview onClick={() => setUserChatWith(otherUser)} user={otherUser} />\n                                    </li>\n                                ))}\n                            </ul>\n                        </Row>\n                        <Row className=\"p-3\">\n                            <ul className=\"list-inline w-100\">\n                                <li><h5 className=\"mx-auto mb-3\">Hi {loggedInUser ? loggedInUser.firstName : ''}! You have ({messages.length}) messages.</h5></li>\n                                <li className=\"w-100 text-left\">\n                                    <ul className=\"list-inline\">\n                                        <li>\n                                            {Object.entries(groupedMessages).map(([userID, messages]) => (\n                                                <ul key={userID} className=\"list-inline m-3\">\n                                                    <li className=\"list-inline-item align-middle\">\n                                                        <img width=\"70\" height=\"70\" className=\"rounded-circle\" src={Grey} alt=\"\" /><br />\n                                                    </li>\n                                                    <li className=\"list-inline-item align-middle text-left mx-2\">\n                                                        <h6 className=\"m-0 font-weight-bold\">@{getUserById(userID).username}</h6>\n                                                        <p className=\"m-0 text-secondary\"><small>{messages[messages.length - 1].message}</small></p>\n                                                    </li>\n                                                    <li className=\"list-inline-item float-right text-right\">\n                                                        <h6 className=\"m-0 py-4 font-weight-bold text-secondary\">{displayTimeAgo(messages[messages.length - 1].createdAt)}</h6>\n                                                    </li>\n                                                </ul>\n                                            ))}\n                                        </li>\n                                    </ul>\n                                </li>\n                            </ul>\n                        </Row>\n                    </Col>\n                    <Col className=\"p-3 h-100\" md={7}>\n                        <Context.Provider value={{ loggedInUser }}>\n                            {(userChatWith) ? <ChatArea userWhomAmChattingWith={userChatWith} passedInMessages={groupedMessages[userChatWith._id]} /> : <></>}\n                        </Context.Provider>\n                    </Col>\n                </Row>\n            </div>\n        </div >\n    )\n}\n\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}