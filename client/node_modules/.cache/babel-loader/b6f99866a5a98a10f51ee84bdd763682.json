{"ast":null,"code":"var _jsxFileName = \"/Users/quangnguyen/Desktop/Projects/Chazzy/client/src/components/ChatArea.js\";\nimport React, { useContext, useState, useEffect, useRef } from 'react';\nimport Context from '../Context';\nimport io from 'socket.io-client';\nimport axios from 'axios';\nimport UserProfilePreview from './UserProfilePreview';\nimport { InputGroup, FormControl, Button } from 'react-bootstrap';\n\nconst ChatArea = ({\n  userWhomAmChattingWith,\n  passedInMessages\n}) => {\n  // useContext\n  const {\n    loggedInUser\n  } = useContext(Context); // useState\n\n  const [socket] = useState(() => io(':8000'));\n  const [messageText, setMessageText] = useState(''); // useRef\n\n  const messageInputRef = useRef(); // useEffect\n\n  useEffect(() => {\n    document.body.scrollIntoView(false);\n  }, [messageInputRef]);\n\n  const formOnSubmit = event => {\n    event.preventDefault();\n    const newMessage = {\n      message: messageText,\n      senderID: loggedInUser._id,\n      receiverID: userWhomAmChattingWith._id\n    };\n    axios.post('http://localhost:8000/api/messages/send', newMessage, {\n      withCredentials: true\n    }).then(res => {\n      messageInputRef.current.value = '';\n      socket.emit('new-message', res.data);\n      e;\n    }).catch(err => {\n      /* TODO: Do something with err */\n    });\n  };\n\n  const isMyMessage = message => message.senderID === loggedInUser._id;\n\n  const messageInputOnChange = event => {\n    const text = event.target.value;\n    const typing = {\n      senderID: loggedInUser._id,\n      receiverID: userWhomAmChattingWith._id,\n      isTyping: text.length > 0\n    };\n    socket.emit('userIsTyping', typing);\n    setMessageText(text);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"ul\", {\n    className: \"list-inline text-center mx-1 pb-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(UserProfilePreview, {\n    user: userWhomAmChattingWith,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), passedInMessages ? passedInMessages.map(message => React.createElement(\"li\", {\n    key: message._id,\n    className: isMyMessage(message) ? 'text-right' : 'text-left',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"mx-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, isMyMessage(message) ? message.message : React.createElement(React.Fragment, null), React.createElement(\"span\", {\n    className: `p-2 rounded ${isMyMessage(message) ? 'ml-2 bg-secondary text-light' : 'mr-2 bg-light'}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"@\", isMyMessage(message) ? 'me' : userWhomAmChattingWith.username), isMyMessage(message) ? React.createElement(React.Fragment, null) : message.message))) : React.createElement(React.Fragment, null)), React.createElement(\"div\", {\n    className: \"sticky\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: \"w-75 mx-auto\",\n    onSubmit: formOnSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(InputGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    ref: messageInputRef,\n    onChange: messageInputOnChange,\n    type: \"text\",\n    className: \"form-control bg-light p-4 border-0\",\n    placeholder: \"Enter your message here...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(InputGroup.Append, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, messageText.length > 0 ? React.createElement(Button, {\n    variant: \"dark\",\n    type: \"submit\",\n    className: \"px-5\",\n    value: \"Send\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Send\") : React.createElement(Button, {\n    variant: \"dark\",\n    type: \"submit\",\n    className: \"px-5\",\n    value: \"Send\",\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Send\"), messageText.length > 0 ? React.createElement(Button, {\n    variant: \"success\",\n    className: \"px-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Now\") : React.createElement(Button, {\n    variant: \"success\",\n    className: \"px-5\",\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Now\"))))));\n};\n\nexport default ChatArea;","map":{"version":3,"sources":["/Users/quangnguyen/Desktop/Projects/Chazzy/client/src/components/ChatArea.js"],"names":["React","useContext","useState","useEffect","useRef","Context","io","axios","UserProfilePreview","InputGroup","FormControl","Button","ChatArea","userWhomAmChattingWith","passedInMessages","loggedInUser","socket","messageText","setMessageText","messageInputRef","document","body","scrollIntoView","formOnSubmit","event","preventDefault","newMessage","message","senderID","_id","receiverID","post","withCredentials","then","res","current","value","emit","data","e","catch","err","isMyMessage","messageInputOnChange","text","target","typing","isTyping","length","map","username"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,EAAiDC,MAAjD,QAA+D,OAA/D;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,SAASC,UAAT,EAAqBC,WAArB,EAAkCC,MAAlC,QAAgD,iBAAhD;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,sBAAF;AAA0BC,EAAAA;AAA1B,CAAD,KAAkD;AAC/D;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAmBd,UAAU,CAACI,OAAD,CAAnC,CAF+D,CAG/D;;AACA,QAAM,CAACW,MAAD,IAAWd,QAAQ,CAAC,MAAMI,EAAE,CAAC,OAAD,CAAT,CAAzB;AACA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgChB,QAAQ,CAAC,EAAD,CAA9C,CAL+D,CAM/D;;AACA,QAAMiB,eAAe,GAAGf,MAAM,EAA9B,CAP+D,CAS/D;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZiB,IAAAA,QAAQ,CAACC,IAAT,CAAcC,cAAd,CAA6B,KAA7B;AACH,GAFQ,EAEN,CAACH,eAAD,CAFM,CAAT;;AAIA,QAAMI,YAAY,GAAGC,KAAK,IAAI;AAC1BA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,UAAU,GAAG;AAAEC,MAAAA,OAAO,EAAEV,WAAX;AAAwBW,MAAAA,QAAQ,EAAEb,YAAY,CAACc,GAA/C;AAAoDC,MAAAA,UAAU,EAAEjB,sBAAsB,CAACgB;AAAvF,KAAnB;AACAtB,IAAAA,KAAK,CAACwB,IAAN,CAAW,yCAAX,EAAsDL,UAAtD,EAAkE;AAAEM,MAAAA,eAAe,EAAE;AAAnB,KAAlE,EACKC,IADL,CACUC,GAAG,IAAI;AACTf,MAAAA,eAAe,CAACgB,OAAhB,CAAwBC,KAAxB,GAAgC,EAAhC;AACApB,MAAAA,MAAM,CAACqB,IAAP,CAAY,aAAZ,EAA2BH,GAAG,CAACI,IAA/B;AAAsCC,MAAAA,CAAC;AAC1C,KAJL,EAKKC,KALL,CAKWC,GAAG,IAAI;AAAE;AAAmC,KALvD;AAMH,GATD;;AAWA,QAAMC,WAAW,GAAGf,OAAO,IAAIA,OAAO,CAACC,QAAR,KAAqBb,YAAY,CAACc,GAAjE;;AAEA,QAAMc,oBAAoB,GAAGnB,KAAK,IAAI;AAClC,UAAMoB,IAAI,GAAGpB,KAAK,CAACqB,MAAN,CAAaT,KAA1B;AACA,UAAMU,MAAM,GAAG;AAAElB,MAAAA,QAAQ,EAAEb,YAAY,CAACc,GAAzB;AAA8BC,MAAAA,UAAU,EAAEjB,sBAAsB,CAACgB,GAAjE;AAAsEkB,MAAAA,QAAQ,EAAGH,IAAI,CAACI,MAAL,GAAc;AAA/F,KAAf;AACAhC,IAAAA,MAAM,CAACqB,IAAP,CAAY,cAAZ,EAA4BS,MAA5B;AACA5B,IAAAA,cAAc,CAAC0B,IAAD,CAAd;AACH,GALD;;AAOA,SACI,0CACI;AAAI,IAAA,SAAS,EAAC,mCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,kBAAD;AAAoB,IAAA,IAAI,EAAE/B,sBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEKC,gBAAgB,GAAGA,gBAAgB,CAACmC,GAAjB,CAAqBtB,OAAO,IAC5C;AAAI,IAAA,GAAG,EAAEA,OAAO,CAACE,GAAjB;AAAsB,IAAA,SAAS,EAAEa,WAAW,CAACf,OAAD,CAAX,GAAuB,YAAvB,GAAsC,WAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKe,WAAW,CAACf,OAAD,CAAX,GAAuBA,OAAO,CAACA,OAA/B,GAAyC,yCAD9C,EAEI;AAAM,IAAA,SAAS,EAAG,eAAce,WAAW,CAACf,OAAD,CAAX,GAAuB,8BAAvB,GAAwD,eAAgB,EAAxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA6Ge,WAAW,CAACf,OAAD,CAAX,GAAuB,IAAvB,GAA8Bd,sBAAsB,CAACqC,QAAlK,CAFJ,EAGKR,WAAW,CAACf,OAAD,CAAX,GAAuB,yCAAvB,GAA+BA,OAAO,CAACA,OAH5C,CADJ,CADgB,CAAH,GAQZ,yCAVT,CADJ,EAaI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,SAAS,EAAC,cAAhB;AAA+B,IAAA,QAAQ,EAAEJ,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAEJ,eAAlB;AAAmC,IAAA,QAAQ,EAAEwB,oBAA7C;AAAmE,IAAA,IAAI,EAAC,MAAxE;AAA+E,IAAA,SAAS,EAAC,oCAAzF;AAA8H,IAAA,WAAW,EAAC,4BAA1I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,UAAD,CAAY,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK1B,WAAW,CAAC+B,MAAZ,GAAqB,CAArB,GAAyB,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,MAAhB;AAAuB,IAAA,IAAI,EAAC,QAA5B;AAAqC,IAAA,SAAS,EAAC,MAA/C;AAAsD,IAAA,KAAK,EAAC,MAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAzB,GAA4G,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,MAAhB;AAAuB,IAAA,IAAI,EAAC,QAA5B;AAAqC,IAAA,SAAS,EAAC,MAA/C;AAAsD,IAAA,KAAK,EAAC,MAA5D;AAAmE,IAAA,QAAQ,MAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADjH,EAEK/B,WAAW,CAAC+B,MAAZ,GAAqB,CAArB,GAAyB,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,SAAS,EAAC,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAzB,GAAmF,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,SAAS,EAAC,MAApC;AAA2C,IAAA,QAAQ,MAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFxF,CAFJ,CADJ,CADJ,CAbJ,CADJ;AA2BH,CA7DD;;AA+DA,eAAepC,QAAf","sourcesContent":["import React, { useContext, useState, useEffect, useRef } from 'react';\nimport Context from '../Context';\nimport io from 'socket.io-client';\nimport axios from 'axios';\nimport UserProfilePreview from './UserProfilePreview';\nimport { InputGroup, FormControl, Button } from 'react-bootstrap';\n\nconst ChatArea = ({ userWhomAmChattingWith, passedInMessages }) => {\n    // useContext\n    const { loggedInUser } = useContext(Context);\n    // useState\n    const [socket] = useState(() => io(':8000'));\n    const [messageText, setMessageText] = useState('');\n    // useRef\n    const messageInputRef = useRef();\n\n    // useEffect\n    useEffect(() => {\n        document.body.scrollIntoView(false);\n    }, [messageInputRef]);\n\n    const formOnSubmit = event => {\n        event.preventDefault();\n        const newMessage = { message: messageText, senderID: loggedInUser._id, receiverID: userWhomAmChattingWith._id };\n        axios.post('http://localhost:8000/api/messages/send', newMessage, { withCredentials: true })\n            .then(res => {\n                messageInputRef.current.value = '';\n                socket.emit('new-message', res.data); e\n            })\n            .catch(err => { /* TODO: Do something with err */ });\n    }\n\n    const isMyMessage = message => message.senderID === loggedInUser._id;\n\n    const messageInputOnChange = event => {\n        const text = event.target.value;\n        const typing = { senderID: loggedInUser._id, receiverID: userWhomAmChattingWith._id, isTyping: (text.length > 0) };\n        socket.emit('userIsTyping', typing);\n        setMessageText(text);\n    }\n\n    return (\n        <>\n            <ul className=\"list-inline text-center mx-1 pb-2\">\n                <UserProfilePreview user={userWhomAmChattingWith} />\n                {passedInMessages ? passedInMessages.map(message => (\n                    <li key={message._id} className={isMyMessage(message) ? 'text-right' : 'text-left'}>\n                        <p className=\"mx-2\">\n                            {isMyMessage(message) ? message.message : <></>}\n                            <span className={`p-2 rounded ${isMyMessage(message) ? 'ml-2 bg-secondary text-light' : 'mr-2 bg-light'}`}>@{isMyMessage(message) ? 'me' : userWhomAmChattingWith.username}</span>\n                            {isMyMessage(message) ? <></> : message.message}\n                        </p>\n                    </li>\n                )) : <></>}\n            </ul>\n            <div className=\"sticky\">\n                <form className=\"w-75 mx-auto\" onSubmit={formOnSubmit}>\n                    <InputGroup>\n                        <FormControl ref={messageInputRef} onChange={messageInputOnChange} type=\"text\" className=\"form-control bg-light p-4 border-0\" placeholder=\"Enter your message here...\" />\n                        <InputGroup.Append>\n                            {messageText.length > 0 ? <Button variant=\"dark\" type=\"submit\" className=\"px-5\" value=\"Send\">Send</Button> : <Button variant=\"dark\" type=\"submit\" className=\"px-5\" value=\"Send\" disabled>Send</Button>}\n                            {messageText.length > 0 ? <Button variant=\"success\" className=\"px-5\">Now</Button> : <Button variant=\"success\" className=\"px-5\" disabled>Now</Button>}\n                        </InputGroup.Append>\n                    </InputGroup>\n                </form>\n            </div>\n        </>\n    );\n}\n\nexport default ChatArea;"]},"metadata":{},"sourceType":"module"}