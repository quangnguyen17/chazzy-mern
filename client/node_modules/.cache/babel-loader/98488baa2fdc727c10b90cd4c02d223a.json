{"ast":null,"code":"import _defineProperty from\"/Users/quangnguyen/Desktop/Projects/Chazzy/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/quangnguyen/Desktop/Projects/Chazzy/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/quangnguyen/Desktop/Projects/Chazzy/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{navigate}from'@reach/router';import axios from'axios';import Context from'../Context';import io from'socket.io-client';// Components\nimport UserProfilePreview from'../components/UserProfilePreview';import ChatArea from'../components/ChatArea';// Bootstrap & Images\nimport{Navbar,Nav,Row,Col,Badge}from'react-bootstrap';import styles from'./Dashboard.module.css';import'../App.css';import Grey from'../grey.jpg';var Dashboard=function Dashboard(){var _useState=useState(function(){return io(':8000');}),_useState2=_slicedToArray(_useState,1),socket=_useState2[0];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),chatUser=_useState4[0],setChatUser=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),newMessage=_useState6[0],setNewMessage=_useState6[1];// Get from first load\nvar _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),loggedInUser=_useState8[0],setLoggedInUser=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),otherUsers=_useState10[0],setOtherUsers=_useState10[1];var _useState11=useState({}),_useState12=_slicedToArray(_useState11,2),groupedMessages=_useState12[0],setGroupedMessages=_useState12[1];// GET USERS & LOGGED IN USER\nuseEffect(function(){axios.get('http://localhost:8000/api/users',{withCredentials:true}).then(function(res){setLoggedInUser(res.data.loggedInUser);setOtherUsers(res.data.otherUsers);setGroupedMessages(res.data.groupedMessages);}).catch(function(err){return navigate('/welcome');});},[]);useEffect(function(){socket.on('received-newMessage',function(data){if(loggedInUser){var _newMessage=data.message;if(_newMessage.senderID===loggedInUser._id||_newMessage.receiverID===loggedInUser._id){setNewMessage(_newMessage);}}});},[loggedInUser]);useEffect(function(){if(newMessage){var repUserID=newMessage.senderID===loggedInUser._id?newMessage.receiverID:newMessage.senderID;var appendingMessage=groupedMessages.hasOwnProperty(repUserID)?groupedMessages[repUserID].concat([newMessage]):[newMessage];setGroupedMessages(_objectSpread({},groupedMessages,_defineProperty({},repUserID,appendingMessage)));setNewMessage(null);}},[newMessage]);var logOut=function logOut(){navigate('/');axios.get('http://localhost:8000/api/users/logout',{withCredentials:true}).then(function(res){/* TODO: Do something with res */}).catch(function(err){/* TODO: Do something with err */});};var getUserById=function getUserById(userID){return otherUsers.filter(function(user){return user._id===userID;})[0];};var displayTimeAgo=function displayTimeAgo(timestamp){var date=new Date(timestamp);var moment=require('moment')(date);return moment.fromNow();};var ConversationsListDisplay=function ConversationsListDisplay(){return React.createElement(\"li\",null,Object.entries(groupedMessages).map(function(grouped,idx){return React.createElement(\"ul\",{onClick:function onClick(){return setChatUser(getUserById(grouped[0]));},key:idx,className:\"btn text-left w-100 px-0 list-inline\"},React.createElement(\"li\",{className:\"list-inline-item align-middle\"},React.createElement(\"img\",{width:\"75\",height:\"75\",className:\"rounded-circle\",src:Grey,alt:\"\"}),React.createElement(\"br\",null)),React.createElement(\"li\",{className:\"list-inline-item align-middle ml-2\"},React.createElement(\"h6\",{className:\"m-0 font-weight-bold\"},\"@\",getUserById(grouped[0]).username),React.createElement(\"small\",{className:\"m-0 text-secondary\"},grouped[1][grouped[1].length-1].senderID!==loggedInUser._id?\"\".concat(getUserById(grouped[0]).firstName,\" sent you a message\"):grouped[1][grouped[1].length-1].message)),React.createElement(\"li\",{className:\"list-inline-item align-middle float-right text-right py-3\"},React.createElement(\"p\",{className:\"m-0 text-secondary\"},React.createElement(\"small\",null,displayTimeAgo(grouped[1][grouped[1].length-1].createdAt),\" ::\")),React.createElement(\"h5\",{className:\"m-0 text-secondary\"},React.createElement(Badge,{variant:\"secondary\"},grouped[1][grouped[1].length-1].senderID===loggedInUser._id?'Sent!':'Received!'))));}));};return React.createElement(\"div\",{className:\"\".concat(styles.dashboard)},React.createElement(Navbar,{style:{backgroundColor:'white',zIndex:'5'},className:\"px-5\",expand:\"md\"},React.createElement(\"h3\",{className:\"p-0 m-0 font-weight-bold\"},\"Chazzy.\"),React.createElement(Navbar.Toggle,{\"aria-controls\":\"nav-collapse\"}),React.createElement(Navbar.Collapse,{id:\"nav-collapse\"},React.createElement(Nav,null,React.createElement(\"h5\",{className:\"nav-link align-middle m-0 ml-3\",href:\"#\"},loggedInUser?React.createElement(Badge,{className:\"p-2\",variant:\"dark\"},\"@\",loggedInUser.username):React.createElement(React.Fragment,null))),React.createElement(Nav,{className:\"ml-auto m-0 p-0\"},React.createElement(Nav.Link,{onClick:logOut,href:\"#\"},\"Log Out.\")))),React.createElement(\"div\",{className:\"\".concat(styles.rowHeight,\" container-fluid m-0 p-0 w-100\")},React.createElement(Row,{className:\"h-100 w-100 p-0 m-0\"},React.createElement(Col,{style:{backgroundColor:'rgb(249, 249, 249)'},className:\"h-100 w-100 overflow-auto \".concat(styles.left),md:5},React.createElement(\"ul\",{className:\"list-inline w-100 text-left pt-4 m-0\",style:{overflowX:'scroll'}},React.createElement(\"li\",{className:\"ml-3 mb-3 font-weight-bold\"},\"Just Random...!\"),otherUsers.map(function(otherUser){return React.createElement(\"li\",{key:otherUser._id,className:\"list-inline-item mx-2\"},React.createElement(UserProfilePreview,{onClick:function onClick(){return setChatUser(otherUser);},user:otherUser}));})),React.createElement(\"ul\",{className:\"list-inline w-100 px-3 py-4 m-0\"},React.createElement(\"li\",null,React.createElement(\"h5\",{className:\"mx-auto mb-4\"},\"Hi \",loggedInUser?loggedInUser.firstName:'',\"! You have (\",Object.keys(groupedMessages).length,\") conversations.\")),React.createElement(\"li\",{className:\"w-100 text-left\"},React.createElement(\"ul\",{className:\"list-inline\"},ConversationsListDisplay())))),React.createElement(Col,{style:{backgroundColor:'rgb(252, 252, 252)'},className:\"p-3 h-100 \".concat(styles.right),md:7},React.createElement(Context.Provider,{value:{loggedInUser:loggedInUser}},chatUser?React.createElement(ChatArea,{userWhomAmChattingWith:chatUser,passedInMessages:groupedMessages[chatUser._id]}):React.createElement(React.Fragment,null))))));};export default Dashboard;","map":{"version":3,"sources":["/Users/quangnguyen/Desktop/Projects/Chazzy/client/src/components/Dashboard.js"],"names":["React","useState","useEffect","navigate","axios","Context","io","UserProfilePreview","ChatArea","Navbar","Nav","Row","Col","Badge","styles","Grey","Dashboard","socket","chatUser","setChatUser","newMessage","setNewMessage","loggedInUser","setLoggedInUser","otherUsers","setOtherUsers","groupedMessages","setGroupedMessages","get","withCredentials","then","res","data","catch","err","on","message","senderID","_id","receiverID","repUserID","appendingMessage","hasOwnProperty","concat","logOut","getUserById","userID","filter","user","displayTimeAgo","timestamp","date","Date","moment","require","fromNow","ConversationsListDisplay","Object","entries","map","grouped","idx","username","length","firstName","createdAt","dashboard","backgroundColor","zIndex","rowHeight","left","overflowX","otherUser","keys","right"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { navigate } from '@reach/router';\nimport axios from 'axios';\nimport Context from '../Context';\nimport io from 'socket.io-client';\n\n// Components\nimport UserProfilePreview from '../components/UserProfilePreview';\nimport ChatArea from '../components/ChatArea';\n\n// Bootstrap & Images\nimport { Navbar, Nav, Row, Col, Badge } from 'react-bootstrap';\nimport styles from './Dashboard.module.css';\nimport '../App.css';\nimport Grey from '../grey.jpg';\n\nconst Dashboard = () => {\n    const [socket] = useState(() => io(':8000'));\n    const [chatUser, setChatUser] = useState(null);\n    const [newMessage, setNewMessage] = useState(null);\n\n    // Get from first load\n    const [loggedInUser, setLoggedInUser] = useState(null);\n    const [otherUsers, setOtherUsers] = useState([]);\n    const [groupedMessages, setGroupedMessages] = useState({});\n\n    // GET USERS & LOGGED IN USER\n    useEffect(() => {\n        axios.get('http://localhost:8000/api/users', { withCredentials: true })\n            .then(res => {\n                setLoggedInUser(res.data.loggedInUser);\n                setOtherUsers(res.data.otherUsers);\n                setGroupedMessages(res.data.groupedMessages);\n            })\n            .catch(err => navigate('/welcome'));\n    }, []);\n\n    useEffect(() => {\n        socket.on('received-newMessage', data => {\n            if (loggedInUser) {\n                const newMessage = data.message;\n                if (newMessage.senderID === loggedInUser._id || newMessage.receiverID === loggedInUser._id) {\n                    setNewMessage(newMessage);\n                }\n            }\n        });\n    }, [loggedInUser]);\n\n    useEffect(() => {\n        if (newMessage) {\n            const repUserID = (newMessage.senderID === loggedInUser._id) ? newMessage.receiverID : newMessage.senderID;\n            const appendingMessage = (groupedMessages.hasOwnProperty(repUserID)) ? groupedMessages[repUserID].concat([newMessage]) : [newMessage];\n            setGroupedMessages({ ...groupedMessages, [repUserID]: appendingMessage });\n            setNewMessage(null);\n        }\n    }, [newMessage]);\n\n    const logOut = () => {\n        navigate('/');\n        axios.get('http://localhost:8000/api/users/logout', { withCredentials: true })\n            .then(res => { /* TODO: Do something with res */ })\n            .catch(err => { /* TODO: Do something with err */ });\n    }\n\n    const getUserById = userID => otherUsers.filter(user => user._id === userID)[0];\n\n    const displayTimeAgo = timestamp => {\n        const date = new Date(timestamp);\n        const moment = require('moment')(date);\n        return moment.fromNow();\n    }\n\n    const ConversationsListDisplay = () => {\n        return (\n            <li>\n                {Object.entries(groupedMessages).map((grouped, idx) => (\n                    <ul onClick={() => setChatUser(getUserById(grouped[0]))} key={idx} className=\"btn text-left w-100 px-0 list-inline\">\n                        <li className=\"list-inline-item align-middle\">\n                            <img width=\"75\" height=\"75\" className=\"rounded-circle\" src={Grey} alt=\"\" /><br />\n                        </li>\n                        <li className=\"list-inline-item align-middle ml-2\">\n                            <h6 className=\"m-0 font-weight-bold\">@{getUserById(grouped[0]).username}</h6>\n                            <small className=\"m-0 text-secondary\">\n                                {(grouped[1][grouped[1].length - 1].senderID !== loggedInUser._id) ? `${getUserById(grouped[0]).firstName} sent you a message` : grouped[1][grouped[1].length - 1].message}\n                            </small>\n                        </li>\n                        <li className=\"list-inline-item align-middle float-right text-right py-3\">\n                            <p className=\"m-0 text-secondary\"><small>{displayTimeAgo(grouped[1][grouped[1].length - 1].createdAt)} ::</small></p>\n                            <h5 className=\"m-0 text-secondary\"><Badge variant=\"secondary\">{grouped[1][grouped[1].length - 1].senderID === loggedInUser._id ? 'Sent!' : 'Received!'}</Badge></h5>\n                        </li>\n                    </ul>\n                ))}\n            </li>\n        );\n    }\n\n    return (\n        <div className={`${styles.dashboard}`}>\n            <Navbar style={{ backgroundColor: 'white', zIndex: '5' }} className=\"px-5\" expand=\"md\">\n                <h3 className=\"p-0 m-0 font-weight-bold\">Chazzy.</h3>\n                <Navbar.Toggle aria-controls=\"nav-collapse\" />\n                <Navbar.Collapse id=\"nav-collapse\">\n                    <Nav>\n                        <h5 className=\"nav-link align-middle m-0 ml-3\" href=\"#\">{loggedInUser ? <Badge className=\"p-2\" variant=\"dark\">@{loggedInUser.username}</Badge> : <></>}</h5>\n                    </Nav>\n                    <Nav className=\"ml-auto m-0 p-0\">\n                        <Nav.Link onClick={logOut} href=\"#\">Log Out.</Nav.Link>\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n            <div className={`${styles.rowHeight} container-fluid m-0 p-0 w-100`}>\n                <Row className=\"h-100 w-100 p-0 m-0\">\n                    <Col style={{ backgroundColor: 'rgb(249, 249, 249)' }} className={`h-100 w-100 overflow-auto ${styles.left}`} md={5}>\n                        <ul className=\"list-inline w-100 text-left pt-4 m-0\" style={{ overflowX: 'scroll' }}>\n                            <li className=\"ml-3 mb-3 font-weight-bold\">Just Random...!</li>\n                            {otherUsers.map(otherUser => (\n                                <li key={otherUser._id} className=\"list-inline-item mx-2\">\n                                    <UserProfilePreview onClick={() => setChatUser(otherUser)} user={otherUser} />\n                                </li>\n                            ))}\n                        </ul>\n                        <ul className=\"list-inline w-100 px-3 py-4 m-0\">\n                            <li>\n                                <h5 className=\"mx-auto mb-4\">Hi {loggedInUser ? loggedInUser.firstName : ''}! You have ({Object.keys(groupedMessages).length}) conversations.</h5>\n                            </li>\n                            <li className=\"w-100 text-left\">\n                                <ul className=\"list-inline\">\n                                    {ConversationsListDisplay()}\n                                </ul>\n                            </li>\n                        </ul>\n                    </Col>\n                    <Col style={{ backgroundColor: 'rgb(252, 252, 252)' }} className={`p-3 h-100 ${styles.right}`} md={7}>\n                        <Context.Provider value={{ loggedInUser }}>\n                            {chatUser ? <ChatArea userWhomAmChattingWith={chatUser} passedInMessages={groupedMessages[chatUser._id]} /> : <></>}\n                        </Context.Provider>\n                    </Col>\n                </Row>\n            </div>\n        </div >\n    )\n}\n\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}