{"ast":null,"code":"var _jsxFileName = \"/Users/quangnguyen/Desktop/Projects/Chazzy/client/src/components/ChatArea.js\";\nimport React, { useContext, useState, useRef } from 'react';\nimport Context from '../Context';\nimport io from 'socket.io-client';\nimport axios from 'axios';\nimport UserProfilePreview from './UserProfilePreview';\nimport { InputGroup, FormControl, Button } from 'react-bootstrap';\n\nconst ChatArea = ({\n  userWhomAmChattingWith,\n  passedInMessages\n}) => {\n  const {\n    loggedInUser\n  } = useContext(Context);\n  const [messageText, setMessageText] = useState('');\n  const messageInputRef = useRef();\n  const [socket] = useState(() => io(':8000'));\n\n  const formOnSubmit = event => {\n    event.preventDefault();\n    const newMessage = {\n      message: messageText,\n      senderID: loggedInUser._id,\n      receiverID: userWhomAmChattingWith._id\n    };\n    axios.post('http://localhost:8000/api/messages/send', newMessage, {\n      withCredentials: true\n    }).then(res => {\n      messageInputRef.current.value = '';\n      socket.emit('new-message', res.data);\n    }).catch(err => console.log(err));\n  };\n\n  const isMyMessage = message => message.senderID === loggedInUser._id;\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"list-inline text-center mx-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(UserProfilePreview, {\n    user: userWhomAmChattingWith,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), passedInMessages.map(message => React.createElement(\"li\", {\n    key: message._id,\n    className: isMyMessage(message) ? 'text-right' : 'text-left',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"mx-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, isMyMessage(message) ? message.message : React.createElement(React.Fragment, null), React.createElement(\"span\", {\n    className: `p-2 rounded ${isMyMessage(message) ? 'ml-2 bg-secondary text-light' : 'mr-2 bg-light'}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"@\", isMyMessage(message) ? 'me' : userWhomAmChattingWith.username), isMyMessage(message) ? React.createElement(React.Fragment, null) : message.message))), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: formOnSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(InputGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    ref: messageInputRef,\n    onChange: event => setMessageText(event.target.value),\n    type: \"text\",\n    className: \"form-control bg-light p-4 border-0\",\n    placeholder: \"Type in your message here\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(InputGroup.Append, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, messageText.length > 0 ? React.createElement(Button, {\n    variant: \"dark\",\n    type: \"submit\",\n    className: \"px-5\",\n    value: \"Send\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Send\") : React.createElement(Button, {\n    variant: \"dark\",\n    type: \"submit\",\n    className: \"px-5\",\n    value: \"Send\",\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Send\"), messageText.length > 0 ? React.createElement(Button, {\n    variant: \"success\",\n    className: \"px-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Now\") : React.createElement(Button, {\n    variant: \"success\",\n    className: \"px-5\",\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Now\")))))));\n};\n\nexport default ChatArea;","map":{"version":3,"sources":["/Users/quangnguyen/Desktop/Projects/Chazzy/client/src/components/ChatArea.js"],"names":["React","useContext","useState","useRef","Context","io","axios","UserProfilePreview","InputGroup","FormControl","Button","ChatArea","userWhomAmChattingWith","passedInMessages","loggedInUser","messageText","setMessageText","messageInputRef","socket","formOnSubmit","event","preventDefault","newMessage","message","senderID","_id","receiverID","post","withCredentials","then","res","current","value","emit","data","catch","err","console","log","isMyMessage","map","username","target","length"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useRef } from 'react';\nimport Context from '../Context';\nimport io from 'socket.io-client';\nimport axios from 'axios';\nimport UserProfilePreview from './UserProfilePreview';\nimport { InputGroup, FormControl, Button } from 'react-bootstrap';\n\nconst ChatArea = ({ userWhomAmChattingWith, passedInMessages }) => {\n    const { loggedInUser } = useContext(Context);\n    const [messageText, setMessageText] = useState('');\n    const messageInputRef = useRef();\n    const [socket] = useState(() => io(':8000'));\n\n    const formOnSubmit = event => {\n        event.preventDefault();\n        const newMessage = { message: messageText, senderID: loggedInUser._id, receiverID: userWhomAmChattingWith._id };\n        axios.post('http://localhost:8000/api/messages/send', newMessage, { withCredentials: true })\n            .then(res => {\n                messageInputRef.current.value = '';\n                socket.emit('new-message', res.data);\n            })\n            .catch(err => console.log(err));\n    }\n\n    const isMyMessage = message => message.senderID === loggedInUser._id;\n\n    return (\n        <div>\n            <ul className=\"list-inline text-center mx-1\">\n                <UserProfilePreview user={userWhomAmChattingWith} />\n                {passedInMessages.map(message => (\n                    <li key={message._id} className={isMyMessage(message) ? 'text-right' : 'text-left'}>\n                        <p className=\"mx-2\">\n                            {isMyMessage(message) ? message.message : <></>}\n                            <span className={`p-2 rounded ${isMyMessage(message) ? 'ml-2 bg-secondary text-light' : 'mr-2 bg-light'}`}>@{isMyMessage(message) ? 'me' : userWhomAmChattingWith.username}</span>\n                            {isMyMessage(message) ? <></> : message.message}\n                        </p>\n                    </li>\n                ))}\n                <li>\n                    <form onSubmit={formOnSubmit}>\n                        <InputGroup>\n                            <FormControl ref={messageInputRef} onChange={event => setMessageText(event.target.value)} type=\"text\" className=\"form-control bg-light p-4 border-0\" placeholder=\"Type in your message here\" />\n                            <InputGroup.Append>\n                                {messageText.length > 0 ? <Button variant=\"dark\" type=\"submit\" className=\"px-5\" value=\"Send\">Send</Button> : <Button variant=\"dark\" type=\"submit\" className=\"px-5\" value=\"Send\" disabled>Send</Button>}\n                                {messageText.length > 0 ? <Button variant=\"success\" className=\"px-5\">Now</Button> : <Button variant=\"success\" className=\"px-5\" disabled>Now</Button>}\n                            </InputGroup.Append>\n                        </InputGroup>\n                    </form>\n                </li>\n                {/* <li className=\"footer\">\n                    <form onSubmit={formOnSubmit} className=\"form-row w-100 text-center m-0\">\n                        <input ref={messageInputRef} onChange={event => setMessageText(event.target.value)} type=\"text\" className=\"form-control bg-light col-6 p-4 mx-1 border-0\" placeholder=\"Type in your message here\" />\n                        {messageText.length > 0 ? <input type=\"submit\" className=\"btn btn-secondary col-2 mr-1\" value=\"Send\" /> : <input type=\"submit\" className=\"btn btn-secondary col-2 mr-1\" value=\"Send\" disabled />}\n                        {messageText.length > 0 ? <button className=\"btn btn-success col-2 mr-1\">Now</button> : <button className=\"btn btn-success col-2 mr-1\" disabled>Now</button>}\n                    </form>\n                </li> */}\n            </ul>\n        </div>\n    );\n}\n\nexport default ChatArea;"]},"metadata":{},"sourceType":"module"}