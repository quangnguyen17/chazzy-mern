{"ast":null,"code":"var _jsxFileName = \"/Users/quangnguyen/Desktop/Projects/Chazzy/client/src/components/Dashboard.js\";\nimport React, { useState, useEffect } from 'react';\nimport { navigate } from '@reach/router';\nimport axios from 'axios';\nimport Context from '../Context';\nimport io from 'socket.io-client'; // Components\n\nimport UserProfilePreview from '../components/UserProfilePreview';\nimport ChatArea from '../components/ChatArea'; // Bootstrap & Images\n\nimport { Navbar, Nav, Row, Col } from 'react-bootstrap';\nimport styles from './Dashboard.module.css';\nimport '../App.css';\nimport Grey from '../grey.jpg';\n\nconst Dashboard = () => {\n  const [socket] = useState(() => io(':8000'));\n  const [chatUser, setChatUser] = useState(null);\n  const [newMessage, setNewMessage] = useState(null); // Get from first load\n\n  const [loggedInUser, setLoggedInUser] = useState(null);\n  const [otherUsers, setOtherUsers] = useState([]);\n  const [groupedMessages, setGroupedMessages] = useState({}); // GET USERS & LOGGED IN USER\n\n  useEffect(() => {\n    axios.get('http://localhost:8000/api/users', {\n      withCredentials: true\n    }).then(res => {\n      setLoggedInUser(res.data.loggedInUser);\n      setOtherUsers(res.data.otherUsers);\n      setGroupedMessages(res.data.groupedMessages);\n    }).catch(err => navigate('/welcome'));\n  }, []);\n  useEffect(() => {\n    socket.on('received-newMessage', data => setNewMessage(data.message));\n  }, [loggedInUser]);\n  useEffect(() => {\n    if (newMessage) {\n      const repUserID = newMessage.senderID === loggedInUser._id ? newMessage.receiverID : newMessage.senderID;\n      const appendingMessage = groupedMessages.hasOwnProperty(repUserID) ? groupedMessages[repUserID].concat([newMessage]) : [newMessage];\n      setGroupedMessages({ ...groupedMessages,\n        [repUserID]: appendingMessage\n      });\n      setNewMessage(null);\n    }\n  }, [newMessage]);\n\n  const logOut = () => {\n    axios.get('http://localhost:8000/api/users/logout', {\n      withCredentials: true\n    }).then(res => navigate('/')).catch(err => console.log(err));\n  };\n\n  const getRepresentationalUser = message => getUserById(message.receiverID === loggedInUser._id ? message.senderID : message.receiverID);\n\n  const getUserById = userID => otherUsers.filter(user => user._id === userID)[0];\n\n  const displayTimeAgo = timestamp => {\n    const date = new Date(timestamp);\n\n    const moment = require('moment')(date);\n\n    return moment.fromNow();\n  };\n\n  const ConversationsListDisplay = () => {\n    return React.createElement(React.Fragment, null, Object.entries(groupedMessages).map((grouped, idx) => React.createElement(\"ul\", {\n      onClick: () => setChatUser(getUserById(grouped[0])),\n      key: idx,\n      className: \"list-inline my-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"list-inline-item align-middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      width: \"75\",\n      height: \"75\",\n      className: \"rounded-circle\",\n      src: Grey,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    })), React.createElement(\"li\", {\n      className: \"list-inline-item align-middle ml-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      className: \"m-0 font-weight-bold\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, getUserById(grouped[0]).username), React.createElement(\"p\", {\n      className: \"m-0 text-secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, grouped[1][grouped[1].length - 1].message)), React.createElement(\"li\", {\n      className: \"list-inline-item align-middle float-right text-right py-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"m-0 text-secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, displayTimeAgo(grouped[1][grouped[1].length - 1].createdAt))), React.createElement(\"p\", {\n      className: \"m-0 text-secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"(\", grouped[1][grouped[1].length - 1].senderID === loggedInUser._id ? 'Sent' : 'Received', \")\"))))));\n  };\n\n  return React.createElement(\"div\", {\n    style: {\n      overflow: 'hidden'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    style: {\n      backgroundColor: 'white'\n    },\n    className: \"py-3 px-4\",\n    expand: \"lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"p-0 m-0\",\n    href: \"#\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"Chazzy.\"), React.createElement(Navbar.Toggle, {\n    \"aria-controls\": \"nav-collapse\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), React.createElement(Navbar.Collapse, {\n    id: \"nav-collapse\",\n    className: \"ml-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(Nav, {\n    className: \"mr-auto align-middle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(Nav.Link, {\n    className: \"align-middle mx-1\",\n    href: \"#\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, loggedInUser ? loggedInUser.username : ''), React.createElement(Nav.Link, {\n    className: \"align-middle mx-1\",\n    href: \"#\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"Recents\")), React.createElement(Nav, {\n    className: \"ml-auto m-0 p-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(Nav.Link, {\n    onClick: logOut,\n    className: \"align-middle btn btn-light mx-1 px-3\",\n    href: \"#\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Log Out.\")))), React.createElement(\"div\", {\n    className: `${styles.rowHeight} container-fluid m-0 p-0 w-100`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(Row, {\n    className: \"h-100 w-100 p-0 m-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(Col, {\n    style: {\n      backgroundImage: 'linear-gradient(white, rgb(245, 245, 245))'\n    },\n    className: \"h-100 w-100\",\n    md: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"list-inline w-100 text-left p-3 m-0\",\n    style: {\n      overflowX: 'scroll'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, otherUsers.map(otherUser => React.createElement(\"li\", {\n    key: otherUser._id,\n    className: \"list-inline-item mx-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(UserProfilePreview, {\n    onClick: () => setChatUser(otherUser),\n    user: otherUser,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  })))), React.createElement(\"ul\", {\n    className: \"list-inline w-100 p-4 m-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    className: \"mx-auto mb-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"Hi \", loggedInUser ? loggedInUser.firstName : '', \"! You have (\", Object.keys(groupedMessages).length, \") conversations.\")), React.createElement(\"li\", {\n    className: \"w-100 text-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"list-inline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, ConversationsListDisplay()))))), React.createElement(Col, {\n    className: \"p-3 h-100\",\n    md: 7,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(Context.Provider, {\n    value: {\n      loggedInUser\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, chatUser ? React.createElement(ChatArea, {\n    userWhomAmChattingWith: chatUser,\n    passedInMessages: groupedMessages[chatUser._id],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }) : React.createElement(React.Fragment, null))))));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/quangnguyen/Desktop/Projects/Chazzy/client/src/components/Dashboard.js"],"names":["React","useState","useEffect","navigate","axios","Context","io","UserProfilePreview","ChatArea","Navbar","Nav","Row","Col","styles","Grey","Dashboard","socket","chatUser","setChatUser","newMessage","setNewMessage","loggedInUser","setLoggedInUser","otherUsers","setOtherUsers","groupedMessages","setGroupedMessages","get","withCredentials","then","res","data","catch","err","on","message","repUserID","senderID","_id","receiverID","appendingMessage","hasOwnProperty","concat","logOut","console","log","getRepresentationalUser","getUserById","userID","filter","user","displayTimeAgo","timestamp","date","Date","moment","require","fromNow","ConversationsListDisplay","Object","entries","map","grouped","idx","username","length","createdAt","overflow","backgroundColor","rowHeight","backgroundImage","overflowX","otherUser","firstName","keys"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { navigate } from '@reach/router';\nimport axios from 'axios';\nimport Context from '../Context';\nimport io from 'socket.io-client';\n\n// Components\nimport UserProfilePreview from '../components/UserProfilePreview';\nimport ChatArea from '../components/ChatArea';\n\n// Bootstrap & Images\nimport { Navbar, Nav, Row, Col } from 'react-bootstrap';\nimport styles from './Dashboard.module.css';\nimport '../App.css';\nimport Grey from '../grey.jpg';\n\nconst Dashboard = () => {\n    const [socket] = useState(() => io(':8000'));\n    const [chatUser, setChatUser] = useState(null);\n    const [newMessage, setNewMessage] = useState(null);\n\n    // Get from first load\n    const [loggedInUser, setLoggedInUser] = useState(null);\n    const [otherUsers, setOtherUsers] = useState([]);\n    const [groupedMessages, setGroupedMessages] = useState({});\n\n    // GET USERS & LOGGED IN USER\n    useEffect(() => {\n        axios.get('http://localhost:8000/api/users', { withCredentials: true })\n            .then(res => {\n                setLoggedInUser(res.data.loggedInUser);\n                setOtherUsers(res.data.otherUsers);\n                setGroupedMessages(res.data.groupedMessages);\n            })\n            .catch(err => navigate('/welcome'));\n    }, []);\n\n    useEffect(() => {\n        socket.on('received-newMessage', data => setNewMessage(data.message));\n    }, [loggedInUser]);\n\n    useEffect(() => {\n        if (newMessage) {\n            const repUserID = (newMessage.senderID === loggedInUser._id) ? newMessage.receiverID : newMessage.senderID;\n            const appendingMessage = (groupedMessages.hasOwnProperty(repUserID)) ? groupedMessages[repUserID].concat([newMessage]) : [newMessage];\n            setGroupedMessages({ ...groupedMessages, [repUserID]: appendingMessage });\n            setNewMessage(null);\n        }\n\n    }, [newMessage]);\n\n    const logOut = () => {\n        axios.get('http://localhost:8000/api/users/logout', { withCredentials: true })\n            .then(res => navigate('/'))\n            .catch(err => console.log(err));\n    }\n\n    const getRepresentationalUser = message => getUserById((message.receiverID === loggedInUser._id) ? message.senderID : message.receiverID);\n    const getUserById = userID => otherUsers.filter(user => user._id === userID)[0];\n\n    const displayTimeAgo = timestamp => {\n        const date = new Date(timestamp);\n        const moment = require('moment')(date);\n        return moment.fromNow();\n    }\n\n    const ConversationsListDisplay = () => {\n        return (\n            <>\n                {Object.entries(groupedMessages).map((grouped, idx) => (\n                    <ul onClick={() => setChatUser(getUserById(grouped[0]))} key={idx} className=\"list-inline my-3\">\n                        <li className=\"list-inline-item align-middle\">\n                            <img width=\"75\" height=\"75\" className=\"rounded-circle\" src={Grey} alt=\"\" /><br />\n                        </li>\n                        <li className=\"list-inline-item align-middle ml-2\">\n                            <h6 className=\"m-0 font-weight-bold\">{getUserById(grouped[0]).username}</h6>\n                            <p className=\"m-0 text-secondary\">{grouped[1][grouped[1].length - 1].message}</p>\n                        </li>\n                        <li className=\"list-inline-item align-middle float-right text-right py-3\">\n                            <p className=\"m-0 text-secondary\"><small>{displayTimeAgo(grouped[1][grouped[1].length - 1].createdAt)}</small></p>\n                            <p className=\"m-0 text-secondary\"><small>({grouped[1][grouped[1].length - 1].senderID === loggedInUser._id ? 'Sent' : 'Received'})</small></p>\n                        </li>\n                    </ul>\n                ))}\n            </>\n        );\n    }\n\n    return (\n        <div style={{ overflow: 'hidden' }}>\n            <Navbar style={{ backgroundColor: 'white' }} className=\"py-3 px-4\" expand=\"lg\">\n                <h3 className=\"p-0 m-0\" href=\"#\">Chazzy.</h3>\n                <Navbar.Toggle aria-controls=\"nav-collapse\" />\n                <Navbar.Collapse id=\"nav-collapse\" className=\"ml-4\">\n                    <Nav className=\"mr-auto align-middle\">\n                        <Nav.Link className=\"align-middle mx-1\" href=\"#\">{loggedInUser ? loggedInUser.username : ''}</Nav.Link>\n                        <Nav.Link className=\"align-middle mx-1\" href=\"#\">Recents</Nav.Link>\n                    </Nav>\n                    <Nav className=\"ml-auto m-0 p-0\">\n                        <Nav.Link onClick={logOut} className=\"align-middle btn btn-light mx-1 px-3\" href=\"#\">Log Out.</Nav.Link>\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n            <div className={`${styles.rowHeight} container-fluid m-0 p-0 w-100`}>\n                <Row className=\"h-100 w-100 p-0 m-0\">\n                    <Col style={{ backgroundImage: 'linear-gradient(white, rgb(245, 245, 245))' }} className=\"h-100 w-100\" md={5}>\n                        <ul className=\"list-inline w-100 text-left p-3 m-0\" style={{ overflowX: 'scroll' }}>\n                            {otherUsers.map(otherUser => (\n                                <li key={otherUser._id} className=\"list-inline-item mx-2\">\n                                    <UserProfilePreview onClick={() => setChatUser(otherUser)} user={otherUser} />\n                                </li>\n                            ))}\n                        </ul>\n                        <ul className=\"list-inline w-100 p-4 m-0\">\n                            <li><h5 className=\"mx-auto mb-4\">Hi {loggedInUser ? loggedInUser.firstName : ''}! You have ({Object.keys(groupedMessages).length}) conversations.</h5></li>\n                            <li className=\"w-100 text-left\">\n                                <ul className=\"list-inline\">\n                                    <li>\n                                        {ConversationsListDisplay()}\n                                    </li>\n                                </ul>\n                            </li>\n                        </ul>\n                    </Col>\n                    <Col className=\"p-3 h-100\" md={7}>\n                        <Context.Provider value={{ loggedInUser }}>\n                            {chatUser ? <ChatArea userWhomAmChattingWith={chatUser} passedInMessages={groupedMessages[chatUser._id]} /> : <></>}\n                        </Context.Provider>\n                    </Col>\n                </Row>\n            </div>\n        </div >\n    )\n}\n\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}