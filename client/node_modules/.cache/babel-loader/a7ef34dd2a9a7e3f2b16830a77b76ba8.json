{"ast":null,"code":"var _jsxFileName = \"/Users/quangnguyen/Desktop/Projects/Chazzy/client/src/components/Dashboard.js\";\nimport React, { useState, useEffect } from 'react';\nimport { navigate } from '@reach/router';\nimport axios from 'axios';\nimport Context from '../Context';\nimport io from 'socket.io-client'; // Components\n\nimport UserProfilePreview from '../components/UserProfilePreview';\nimport ChatArea from '../components/ChatArea'; // Bootstrap & Images\n\nimport { Navbar, Nav, Row, Col } from 'react-bootstrap';\nimport styles from './Dashboard.module.css';\nimport '../App.css';\nimport Grey from '../grey.jpg';\n\nconst Dashboard = () => {\n  const [socket] = useState(() => io(':8000'));\n  const [chatUser, setChatUser] = useState(null); // Get from first load\n\n  const [loggedInUser, setLoggedInUser] = useState(null);\n  const [otherUsers, setOtherUsers] = useState([]);\n  const [messages, setMessages] = useState([]); // GET USERS & LOGGED IN USER\n\n  useEffect(() => {\n    axios.get('http://localhost:8000/api/users', {\n      withCredentials: true\n    }).then(res => {\n      setLoggedInUser(res.data.loggedInUser);\n      setOtherUsers(res.data.otherUsers);\n      setMessages(res.data.messages);\n      console.log(res.data);\n    }).catch(err => navigate('/welcome')); // socket.on('received-newMessage', data => {\n    //     if (messages) {\n    //         setMessages(messages.concat([data.message]));\n    //     }\n    // });\n  }, []); // Get conversations\n\n  useEffect(() => {\n    if (messages.length > 0) {\n      console.log(messages);\n    }\n  }, [messages]);\n\n  const logOut = () => {\n    axios.get('http://localhost:8000/api/users/logout', {\n      withCredentials: true\n    }).then(res => navigate('/')).catch(err => console.log(err));\n  };\n\n  const getRepresentationalUser = message => getUserById(message.receiverID === loggedInUser._id ? message.senderID : message.receiverID);\n\n  const getUserById = userID => otherUsers.filter(user => user._id === userID)[0]; // const displayTimeAgo = timestamp => {\n  //     const date = new Date(timestamp);\n  //     const moment = require('moment')(date);\n  //     return moment.fromNow();\n  // }\n\n\n  const ConversationsDisplay = () => {\n    return React.createElement(React.Fragment, null);\n  };\n\n  return React.createElement(\"div\", {\n    style: {\n      overflowY: 'auto'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    style: {\n      backgroundColor: 'white'\n    },\n    className: \"py-3 px-4\",\n    expand: \"lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"p-0 m-0\",\n    href: \"#\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Chazzy.\"), React.createElement(Navbar.Toggle, {\n    \"aria-controls\": \"nav-collapse\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), React.createElement(Navbar.Collapse, {\n    id: \"nav-collapse\",\n    className: \"ml-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(Nav, {\n    className: \"mr-auto align-middle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(Nav.Link, {\n    className: \"align-middle mx-1\",\n    href: \"#\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, loggedInUser ? loggedInUser.username : ''), React.createElement(Nav.Link, {\n    className: \"align-middle mx-1\",\n    href: \"#\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Recents\")), React.createElement(Nav, {\n    className: \"ml-auto m-0 p-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(Nav.Link, {\n    onClick: logOut,\n    className: \"align-middle btn btn-light mx-1 px-3\",\n    href: \"#\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Log Out.\")))), React.createElement(\"div\", {\n    className: `${styles.rowHeight} container-fluid m-0 p-0 w-100`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(Row, {\n    className: \"h-100 w-100 p-0 m-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(Col, {\n    style: {\n      backgroundImage: 'linear-gradient(white, rgb(245, 245, 245))'\n    },\n    className: \"h-100 w-100\",\n    md: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"list-inline w-100 text-left p-3 m-0\",\n    style: {\n      overflowX: 'scroll'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, otherUsers.map(otherUser => React.createElement(\"li\", {\n    key: otherUser._id,\n    className: \"list-inline-item mx-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(UserProfilePreview, {\n    onClick: () => setChatUser(otherUser),\n    user: otherUser,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  })))), React.createElement(\"ul\", {\n    className: \"list-inline w-100 p-3 m-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    className: \"mx-auto mb-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"Hi \", loggedInUser ? loggedInUser.firstName : '', \"! You have (\", messages.length, \") messages.\")), React.createElement(\"li\", {\n    className: \"w-100 text-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"list-inline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }))))), React.createElement(Col, {\n    className: \"p-3 h-100\",\n    md: 7,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(Context.Provider, {\n    value: {\n      loggedInUser\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  })))));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/quangnguyen/Desktop/Projects/Chazzy/client/src/components/Dashboard.js"],"names":["React","useState","useEffect","navigate","axios","Context","io","UserProfilePreview","ChatArea","Navbar","Nav","Row","Col","styles","Grey","Dashboard","socket","chatUser","setChatUser","loggedInUser","setLoggedInUser","otherUsers","setOtherUsers","messages","setMessages","get","withCredentials","then","res","data","console","log","catch","err","length","logOut","getRepresentationalUser","message","getUserById","receiverID","_id","senderID","userID","filter","user","ConversationsDisplay","overflowY","backgroundColor","username","rowHeight","backgroundImage","overflowX","map","otherUser","firstName"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { navigate } from '@reach/router';\nimport axios from 'axios';\nimport Context from '../Context';\nimport io from 'socket.io-client';\n\n// Components\nimport UserProfilePreview from '../components/UserProfilePreview';\nimport ChatArea from '../components/ChatArea';\n\n// Bootstrap & Images\nimport { Navbar, Nav, Row, Col } from 'react-bootstrap';\nimport styles from './Dashboard.module.css';\nimport '../App.css';\nimport Grey from '../grey.jpg';\n\nconst Dashboard = () => {\n    const [socket] = useState(() => io(':8000'));\n    const [chatUser, setChatUser] = useState(null);\n\n    // Get from first load\n    const [loggedInUser, setLoggedInUser] = useState(null);\n    const [otherUsers, setOtherUsers] = useState([]);\n    const [messages, setMessages] = useState([]);\n\n    // GET USERS & LOGGED IN USER\n    useEffect(() => {\n        axios.get('http://localhost:8000/api/users', { withCredentials: true })\n            .then(res => {\n                setLoggedInUser(res.data.loggedInUser);\n                setOtherUsers(res.data.otherUsers);\n                setMessages(res.data.messages);\n                console.log(res.data);\n            })\n            .catch(err => navigate('/welcome'));\n\n        // socket.on('received-newMessage', data => {\n        //     if (messages) {\n        //         setMessages(messages.concat([data.message]));\n        //     }\n        // });\n    }, []);\n\n    // Get conversations\n    useEffect(() => {\n        if (messages.length > 0) {\n            console.log(messages);\n        }\n    }, [messages]);\n\n    const logOut = () => {\n        axios.get('http://localhost:8000/api/users/logout', { withCredentials: true })\n            .then(res => navigate('/'))\n            .catch(err => console.log(err));\n    }\n\n    const getRepresentationalUser = message => getUserById((message.receiverID === loggedInUser._id) ? message.senderID : message.receiverID);\n    const getUserById = userID => otherUsers.filter(user => user._id === userID)[0];\n\n    // const displayTimeAgo = timestamp => {\n    //     const date = new Date(timestamp);\n    //     const moment = require('moment')(date);\n    //     return moment.fromNow();\n    // }\n\n    const ConversationsDisplay = () => {\n        return (<>\n            {/* {Object.entries(conversations).map((object, idx) => (\n                <ul key={idx} className=\"list-inline\">\n                    <li className=\"list-inline-item align-middle\">\n                        <img width=\"90\" height=\"90\" className=\"rounded-circle\" src={Grey} alt=\"\" /><br />\n                    </li>\n                    <li className=\"list-inline-item align-middle ml-2\">\n                        <h6 className=\"m-0 font-weight-bold\">{getUserById(object[0]).username}</h6>\n                        <p className=\"m-0 text-secondary\">{object[1][object[1].length - 1].message}</p>\n                    </li>\n                </ul>\n            ))} */}\n        </>);\n    }\n\n    return (\n        <div style={{ overflowY: 'auto' }}>\n            <Navbar style={{ backgroundColor: 'white' }} className=\"py-3 px-4\" expand=\"lg\">\n                <h3 className=\"p-0 m-0\" href=\"#\">Chazzy.</h3>\n                <Navbar.Toggle aria-controls=\"nav-collapse\" />\n                <Navbar.Collapse id=\"nav-collapse\" className=\"ml-4\">\n                    <Nav className=\"mr-auto align-middle\">\n                        <Nav.Link className=\"align-middle mx-1\" href=\"#\">{loggedInUser ? loggedInUser.username : ''}</Nav.Link>\n                        <Nav.Link className=\"align-middle mx-1\" href=\"#\">Recents</Nav.Link>\n                    </Nav>\n                    <Nav className=\"ml-auto m-0 p-0\">\n                        <Nav.Link onClick={logOut} className=\"align-middle btn btn-light mx-1 px-3\" href=\"#\">Log Out.</Nav.Link>\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n            <div className={`${styles.rowHeight} container-fluid m-0 p-0 w-100`}>\n                <Row className=\"h-100 w-100 p-0 m-0\">\n                    <Col style={{ backgroundImage: 'linear-gradient(white, rgb(245, 245, 245))' }} className=\"h-100 w-100\" md={5}>\n                        <ul className=\"list-inline w-100 text-left p-3 m-0\" style={{ overflowX: 'scroll' }}>\n                            {otherUsers.map(otherUser => (\n                                <li key={otherUser._id} className=\"list-inline-item mx-2\">\n                                    <UserProfilePreview onClick={() => setChatUser(otherUser)} user={otherUser} />\n                                </li>\n                            ))}\n\n                        </ul>\n                        <ul className=\"list-inline w-100 p-3 m-0\">\n                            <li><h5 className=\"mx-auto mb-3\">Hi {loggedInUser ? loggedInUser.firstName : ''}! You have ({messages.length}) messages.</h5></li>\n                            <li className=\"w-100 text-left\">\n                                <ul className=\"list-inline\">\n                                    <li>\n                                        {/* {conversations ? <>{ConversationsDisplay()}</> : <></>} */}\n                                    </li>\n                                </ul>\n                            </li>\n                        </ul>\n                    </Col>\n                    <Col className=\"p-3 h-100\" md={7}>\n                        <Context.Provider value={{ loggedInUser }}>\n                            {/* {chatUser ? <ChatArea userWhomAmChattingWith={chatUser} passedInMessages={conversations[chatUser._id]} /> : <></>} */}\n                        </Context.Provider>\n                    </Col>\n                </Row>\n            </div>\n        </div >\n    )\n}\n\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}