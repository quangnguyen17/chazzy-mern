{"ast":null,"code":"var _jsxFileName = \"/Users/quangnguyen/Desktop/Projects/Chazzy/client/src/components/Dashboard.js\";\nimport React, { useState, useEffect, useContext, useRef } from 'react';\nimport { navigate } from '@reach/router';\nimport axios from 'axios';\nimport Context from '../Context';\nimport io from 'socket.io-client'; // Components\n\nimport UserProfilePreview from '../components/UserProfilePreview'; // Bootstrap & Images\n\nimport { Navbar, Nav, Row, Col } from 'react-bootstrap';\nimport styles from './Dashboard.module.css';\nimport '../App.css';\n\nconst ChatArea = ({\n  userWhomAmChattingWith,\n  passedInMessages\n}) => {\n  const {\n    loggedInUser\n  } = useContext(Context);\n  const [messageText, setMessageText] = useState('');\n  const messageInputRef = useRef();\n  const [socket] = useState(() => io(':8000'));\n\n  const formOnSubmit = event => {\n    event.preventDefault();\n    const newMessage = {\n      message: messageText,\n      senderID: loggedInUser._id,\n      receiverID: userWhomAmChattingWith._id\n    };\n    axios.post('http://localhost:8000/api/messages/send', newMessage, {\n      withCredentials: true\n    }).then(res => {\n      messageInputRef.current.value = '';\n      socket.emit('new-message', res.data);\n    }).catch(err => console.log(err));\n  };\n\n  const isMyMessage = message => message.senderID === loggedInUser._id;\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, userWhomAmChattingWith ? React.createElement(React.Fragment, null, React.createElement(\"ul\", {\n    className: \"list-inline text-center mx-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(UserProfilePreview, {\n    user: userWhomAmChattingWith,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })), passedInMessages ? passedInMessages.map(message => React.createElement(\"li\", {\n    key: message._id,\n    className: isMyMessage(message) ? 'text-right' : 'text-left',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"mx-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, isMyMessage(message) ? message.message : React.createElement(React.Fragment, null), React.createElement(\"span\", {\n    className: `p-2 rounded ${isMyMessage(message) ? 'ml-2 bg-secondary text-light' : 'mr-2 bg-light'}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"@\", isMyMessage(message) ? 'me' : userWhomAmChattingWith.username), isMyMessage(message) ? React.createElement(React.Fragment, null) : message.message))) : React.createElement(React.Fragment, null)), React.createElement(\"footer\", {\n    style: {\n      position: 'absolute',\n      bottom: '24px',\n      left: '24px',\n      right: '0'\n    },\n    className: \"text-center p-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: formOnSubmit,\n    className: \"form-row w-100 text-center m-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    ref: messageInputRef,\n    onChange: event => setMessageText(event.target.value),\n    type: \"text\",\n    className: \"form-control bg-light col-6 p-4 mx-1 border-0\",\n    placeholder: \"Type in your message here\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), messageText.length > 0 ? React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-secondary col-2 mr-1\",\n    value: \"=> Send\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }) : React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-secondary col-2 mr-1\",\n    value: \"=> Send\",\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), messageText.length > 0 ? React.createElement(\"button\", {\n    className: \"btn btn-success col-2 mr-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Now\") : React.createElement(\"button\", {\n    className: \"btn btn-success col-2 mr-1\",\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Now\")))) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"text-secondary m-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"- Chazzier!. :) -\")));\n};\n\nconst Dashboard = () => {\n  const [loggedInUser, setLoggedInUser] = useState(null);\n  const [userChatWith, setUserChatWith] = useState(null);\n  const [otherUsers, setOtherUsers] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [conversations, setConversations] = useState(null);\n  const [socket] = useState(() => io(':8000')); // GET USERS & LOGGED IN USER\n\n  useEffect(() => {\n    axios.get('http://localhost:8000/api/users', {\n      withCredentials: true\n    }).then(res => {\n      setLoggedInUser(res.data.loggedInUser);\n      setOtherUsers(res.data.otherUsers);\n    }).catch(err => navigate('/welcome'));\n    socket.on('received-newMessage', data => {\n      if (messages) {\n        setMessages(messages.concat([data.message]));\n      }\n    });\n  }, []); // GET MESSAGES\n\n  useEffect(() => {\n    if (loggedInUser) {\n      axios.get(`http://localhost:8000/api/messages/${loggedInUser._id}`, {\n        withCredentials: true\n      }).then(res => setMessages(res.data)).catch(err => console.log(err));\n    }\n  }, [loggedInUser]); // GET CONVERSATIONS\n\n  useEffect(() => {\n    if (messages.length > 0) {\n      let newMap = new Map();\n\n      for (let index = 0; index < messages.length; index++) {\n        const message = messages[index];\n\n        const userID = getRepresentationalUser(message)._id;\n\n        newMap.has(userID) ? newMap.set(userID, newMap.get(userID).concat([message])) : newMap.set(userID, [message]);\n      }\n\n      setConversations(newMap);\n    }\n  }, [messages]);\n  useEffect(() => {\n    console.log(conversations);\n  }, [conversations]);\n\n  const logOut = () => {\n    axios.get('http://localhost:8000/api/users/logout', {\n      withCredentials: true\n    }).then(res => navigate('/')).catch(err => console.log(err));\n  };\n\n  const getRepresentationalUser = message => getUserById(message.receiverID === loggedInUser._id ? message.senderID : message.receiverID);\n\n  const getUserById = userID => otherUsers.filter(user => user._id === userID)[0]; // const displayTimeAgo = timestamp => {\n  //     const date = new Date(timestamp);\n  //     const moment = require('moment')(date);\n  //     return moment.fromNow();\n  // }\n\n\n  return React.createElement(\"div\", {\n    style: {\n      overflowY: 'auto'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    style: {\n      backgroundColor: 'white'\n    },\n    className: \"py-3 px-4\",\n    expand: \"lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"p-0 m-0\",\n    href: \"#\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, \"Chazzy.\"), React.createElement(Navbar.Toggle, {\n    \"aria-controls\": \"nav-collapse\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }), React.createElement(Navbar.Collapse, {\n    id: \"nav-collapse\",\n    className: \"ml-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(Nav, {\n    className: \"mr-auto align-middle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(Nav.Link, {\n    className: \"align-middle mx-1\",\n    href: \"#\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, loggedInUser ? loggedInUser.username : ''), React.createElement(Nav.Link, {\n    className: \"align-middle mx-1\",\n    href: \"#\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \"Recents\")), React.createElement(Nav, {\n    className: \"ml-auto m-0 p-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(Nav.Link, {\n    onClick: logOut,\n    className: \"align-middle mx-1\",\n    href: \"#\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, \"Log Out.\")))), React.createElement(\"div\", {\n    className: `${styles.rowHeight} container-fluid m-0 p-0 w-100`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(Row, {\n    className: \"h-100 w-100 p-0 m-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(Col, {\n    style: {\n      backgroundImage: 'linear-gradient(white, rgb(245, 245, 245))'\n    },\n    className: \"h-100\",\n    md: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(Row, {\n    className: \"m-0 p-0 py-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"list-inline p-0 m-0\",\n    style: {\n      overflowX: 'scroll'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, otherUsers.map(otherUser => React.createElement(\"li\", {\n    key: otherUser._id,\n    className: \"list-inline-item mx-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(UserProfilePreview, {\n    onClick: () => setUserChatWith(otherUser),\n    user: otherUser,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }))))), React.createElement(Row, {\n    className: \"p-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    style: {\n      overscrollBehaviorY: 'scroll',\n      overflowY: 'scroll'\n    },\n    className: \"list-inline w-100 h-100\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    className: \"mx-auto mb-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, \"Hi \", loggedInUser ? loggedInUser.firstName : '', \"! You have (\", messages.length, \") messages.\")), React.createElement(\"li\", {\n    className: \"w-100 text-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"list-inline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  })))))), React.createElement(Col, {\n    className: \"p-3 h-100\",\n    md: 7,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, React.createElement(Context.Provider, {\n    value: {\n      loggedInUser\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  })))));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/quangnguyen/Desktop/Projects/Chazzy/client/src/components/Dashboard.js"],"names":["React","useState","useEffect","useContext","useRef","navigate","axios","Context","io","UserProfilePreview","Navbar","Nav","Row","Col","styles","ChatArea","userWhomAmChattingWith","passedInMessages","loggedInUser","messageText","setMessageText","messageInputRef","socket","formOnSubmit","event","preventDefault","newMessage","message","senderID","_id","receiverID","post","withCredentials","then","res","current","value","emit","data","catch","err","console","log","isMyMessage","map","username","position","bottom","left","right","target","length","Dashboard","setLoggedInUser","userChatWith","setUserChatWith","otherUsers","setOtherUsers","messages","setMessages","conversations","setConversations","get","on","concat","newMap","Map","index","userID","getRepresentationalUser","has","set","logOut","getUserById","filter","user","overflowY","backgroundColor","rowHeight","backgroundImage","overflowX","otherUser","overscrollBehaviorY","firstName"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext, useRef } from 'react';\nimport { navigate } from '@reach/router';\nimport axios from 'axios';\nimport Context from '../Context';\nimport io from 'socket.io-client';\n// Components\nimport UserProfilePreview from '../components/UserProfilePreview';\n// Bootstrap & Images\nimport { Navbar, Nav, Row, Col } from 'react-bootstrap';\nimport styles from './Dashboard.module.css';\nimport '../App.css';\n\nconst ChatArea = ({ userWhomAmChattingWith, passedInMessages }) => {\n    const { loggedInUser } = useContext(Context);\n    const [messageText, setMessageText] = useState('');\n    const messageInputRef = useRef();\n    const [socket] = useState(() => io(':8000'));\n\n    const formOnSubmit = event => {\n        event.preventDefault();\n        const newMessage = { message: messageText, senderID: loggedInUser._id, receiverID: userWhomAmChattingWith._id };\n        axios.post('http://localhost:8000/api/messages/send', newMessage, { withCredentials: true })\n            .then(res => {\n                messageInputRef.current.value = '';\n                socket.emit('new-message', res.data);\n            })\n            .catch(err => console.log(err));\n    }\n\n    const isMyMessage = message => message.senderID === loggedInUser._id;\n\n    return (\n        <div>\n            {userWhomAmChattingWith ? <>\n                <ul className=\"list-inline text-center mx-1\">\n                    <li><UserProfilePreview user={userWhomAmChattingWith} /></li>\n                    {passedInMessages ? passedInMessages.map(message => (\n                        <li key={message._id} className={isMyMessage(message) ? 'text-right' : 'text-left'}>\n                            <p className=\"mx-2\">\n                                {isMyMessage(message) ? message.message : <></>}\n                                <span className={`p-2 rounded ${isMyMessage(message) ? 'ml-2 bg-secondary text-light' : 'mr-2 bg-light'}`}>@{isMyMessage(message) ? 'me' : userWhomAmChattingWith.username}</span>\n                                {isMyMessage(message) ? <></> : message.message}\n                            </p>\n                        </li>\n                    )) : <></>}\n                </ul>\n                <footer style={{ position: 'absolute', bottom: '24px', left: '24px', right: '0' }} className=\"text-center p-0\">\n                    <form onSubmit={formOnSubmit} className=\"form-row w-100 text-center m-0\">\n                        <input ref={messageInputRef} onChange={event => setMessageText(event.target.value)} type=\"text\" className=\"form-control bg-light col-6 p-4 mx-1 border-0\" placeholder=\"Type in your message here\" />\n                        {messageText.length > 0 ? <input type=\"submit\" className=\"btn btn-secondary col-2 mr-1\" value=\"=> Send\" /> : <input type=\"submit\" className=\"btn btn-secondary col-2 mr-1\" value=\"=> Send\" disabled />}\n                        {messageText.length > 0 ? <button className=\"btn btn-success col-2 mr-1\">Now</button> : <button className=\"btn btn-success col-2 mr-1\" disabled>Now</button>}\n                    </form>\n                </footer>\n            </> : <div><p className=\"text-secondary m-5\">- Chazzier!. :) -</p></div>}\n        </div>\n    );\n}\n\nconst Dashboard = () => {\n    const [loggedInUser, setLoggedInUser] = useState(null);\n    const [userChatWith, setUserChatWith] = useState(null);\n    const [otherUsers, setOtherUsers] = useState([]);\n\n    const [messages, setMessages] = useState([]);\n    const [conversations, setConversations] = useState(null);\n    const [socket] = useState(() => io(':8000'));\n\n    // GET USERS & LOGGED IN USER\n    useEffect(() => {\n        axios.get('http://localhost:8000/api/users', { withCredentials: true })\n            .then(res => {\n                setLoggedInUser(res.data.loggedInUser);\n                setOtherUsers(res.data.otherUsers);\n            })\n            .catch(err => navigate('/welcome'));\n\n        socket.on('received-newMessage', data => {\n            if (messages) {\n                setMessages(messages.concat([data.message]));\n            }\n        });\n    }, []);\n\n    // GET MESSAGES\n    useEffect(() => {\n        if (loggedInUser) {\n            axios.get(`http://localhost:8000/api/messages/${loggedInUser._id}`, { withCredentials: true })\n                .then(res => setMessages(res.data))\n                .catch(err => console.log(err));\n        }\n    }, [loggedInUser]);\n\n    // GET CONVERSATIONS\n    useEffect(() => {\n        if (messages.length > 0) {\n            let newMap = new Map();\n\n            for (let index = 0; index < messages.length; index++) {\n                const message = messages[index];\n                const userID = getRepresentationalUser(message)._id;\n                newMap.has(userID) ? newMap.set(userID, newMap.get(userID).concat([message])) : newMap.set(userID, [message]);\n            }\n\n            setConversations(newMap);\n        }\n    }, [messages]);\n\n    useEffect(() => {\n        console.log(conversations);\n    }, [conversations]);\n\n    const logOut = () => {\n        axios.get('http://localhost:8000/api/users/logout', { withCredentials: true })\n            .then(res => navigate('/'))\n            .catch(err => console.log(err));\n    }\n\n    const getRepresentationalUser = message => getUserById((message.receiverID === loggedInUser._id) ? message.senderID : message.receiverID);\n    const getUserById = userID => otherUsers.filter(user => user._id === userID)[0];\n\n    // const displayTimeAgo = timestamp => {\n    //     const date = new Date(timestamp);\n    //     const moment = require('moment')(date);\n    //     return moment.fromNow();\n    // }\n\n    return (\n        <div style={{ overflowY: 'auto' }}>\n            <Navbar style={{ backgroundColor: 'white' }} className=\"py-3 px-4\" expand=\"lg\">\n                <h3 className=\"p-0 m-0\" href=\"#\">Chazzy.</h3>\n                <Navbar.Toggle aria-controls=\"nav-collapse\" />\n                <Navbar.Collapse id=\"nav-collapse\" className=\"ml-4\">\n                    <Nav className=\"mr-auto align-middle\">\n                        <Nav.Link className=\"align-middle mx-1\" href=\"#\">{loggedInUser ? loggedInUser.username : ''}</Nav.Link>\n                        <Nav.Link className=\"align-middle mx-1\" href=\"#\">Recents</Nav.Link>\n                    </Nav>\n                    <Nav className=\"ml-auto m-0 p-0\">\n                        <Nav.Link onClick={logOut} className=\"align-middle mx-1\" href=\"#\">Log Out.</Nav.Link>\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n            <div className={`${styles.rowHeight} container-fluid m-0 p-0 w-100`}>\n                <Row className=\"h-100 w-100 p-0 m-0\">\n                    <Col style={{ backgroundImage: 'linear-gradient(white, rgb(245, 245, 245))' }} className=\"h-100\" md={5}>\n                        <Row className=\"m-0 p-0 py-3\">\n                            <ul className=\"list-inline p-0 m-0\" style={{ overflowX: 'scroll' }}>\n                                {otherUsers.map(otherUser => (\n                                    <li key={otherUser._id} className=\"list-inline-item mx-2\">\n                                        <UserProfilePreview onClick={() => setUserChatWith(otherUser)} user={otherUser} />\n                                    </li>\n                                ))}\n                            </ul>\n                        </Row>\n                        <Row className=\"p-3\">\n                            <ul style={{ overscrollBehaviorY: 'scroll', overflowY: 'scroll' }} className=\"list-inline w-100 h-100\">\n                                <li><h5 className=\"mx-auto mb-3\">Hi {loggedInUser ? loggedInUser.firstName : ''}! You have ({messages.length}) messages.</h5></li>\n                                <li className=\"w-100 text-left\">\n                                    <ul className=\"list-inline\">\n                                        <li>\n                                            {/* {conversations ? conversations.map((mes) => (<li>wefrgreg</li>)) : <></>} */}\n                                            {/* {conversations.length > 0 ? Object.entries(conversations).map((userID, messages) => (\n                                                <ul key={userID} className=\"list-inline m-3\">\n                                                    <li className=\"list-inline-item align-middle\">\n                                                        <img width=\"70\" height=\"70\" className=\"rounded-circle\" src={Grey} alt=\"\" /><br />\n                                                    </li>\n                                                    <li className=\"list-inline-item align-middle text-left mx-2\">\n                                                        <h6 className=\"m-0 font-weight-bold\">@{getUserById(userID).username}</h6> */}\n                                            {/* <p className=\"m-0 text-secondary\"><small>{JSON.stringify(messages)}</small></p>\n                                                    </li>\n                                                    <li className=\"list-inline-item float-right text-right\">\n                                                        <h6 className=\"m-0 py-4 font-weight-bold text-secondary\">{displayTimeAgo(message.createdAt)}</h6>\n                                                    </li>\n                                                </ul>\n                                            )) : <></>} */}\n                                            {/* {conversations.map((message) => (\n                                                <ul key={message._id} className=\"list-inline m-3\">\n                                                    <li className=\"list-inline-item align-middle\">\n                                                        <img width=\"70\" height=\"70\" className=\"rounded-circle\" src={Grey} alt=\"\" /><br />\n                                                    </li>\n                                                    <li className=\"list-inline-item align-middle text-left mx-2\">\n                                                        <h6 className=\"m-0 font-weight-bold\">@{getRepresentationalUser(message).username}</h6>\n                                                        <p className=\"m-0 text-secondary\"><small>{message.message}</small></p>\n                                                    </li>\n                                                    <li className=\"list-inline-item float-right text-right\">\n                                                        <h6 className=\"m-0 py-4 font-weight-bold text-secondary\">{displayTimeAgo(message.createdAt)}</h6>\n                                                    </li>\n                                                </ul>\n                                            ))} */}\n                                        </li>\n                                    </ul>\n                                </li>\n                            </ul>\n                        </Row>\n                    </Col>\n                    <Col className=\"p-3 h-100\" md={7}>\n                        <Context.Provider value={{ loggedInUser }}>\n                            {/* {conversations ? ((userChatWith) ? <ChatArea userWhomAmChattingWith={userChatWith} passedInMessages={conversations[userChatWith._id]} /> : <></>) : <></>} */}\n                        </Context.Provider>\n                    </Col>\n                </Row>\n            </div>\n        </div >\n    )\n}\n\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}